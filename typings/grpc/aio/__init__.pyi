"""
This type stub file was generated by pyright.
"""

import grpc
from typing import Any, Optional, Sequence, Tuple
from grpc._cython.cygrpc import AbortError, BaseError, EOF, InternalError, UsageError, init_grpc_aio, shutdown_grpc_aio
from ._base_call import Call, RpcContext, StreamStreamCall, StreamUnaryCall, UnaryStreamCall, UnaryUnaryCall
from ._base_channel import Channel, StreamStreamMultiCallable, StreamUnaryMultiCallable, UnaryStreamMultiCallable, UnaryUnaryMultiCallable
from ._base_server import Server, ServicerContext
from ._call import AioRpcError
from ._channel import insecure_channel, secure_channel
from ._interceptor import ClientCallDetails, ClientInterceptor, InterceptedUnaryUnaryCall, ServerInterceptor, StreamStreamClientInterceptor, StreamUnaryClientInterceptor, UnaryStreamClientInterceptor, UnaryUnaryClientInterceptor
from ._metadata import Metadata
from ._server import server
from ._typing import ChannelArgumentType

"""gRPC's Asynchronous Python API.

gRPC Async API objects may only be used on the thread on which they were
created. AsyncIO doesn't provide thread safety for most of its APIs.
"""
__all__ = ('init_grpc_aio', 'shutdown_grpc_aio', 'AioRpcError', 'RpcContext', 'Call', 'UnaryUnaryCall', 'UnaryStreamCall', 'StreamUnaryCall', 'StreamStreamCall', 'Channel', 'UnaryUnaryMultiCallable', 'UnaryStreamMultiCallable', 'StreamUnaryMultiCallable', 'StreamStreamMultiCallable', 'ClientCallDetails', 'ClientInterceptor', 'UnaryStreamClientInterceptor', 'UnaryUnaryClientInterceptor', 'StreamUnaryClientInterceptor', 'StreamStreamClientInterceptor', 'InterceptedUnaryUnaryCall', 'ServerInterceptor', 'insecure_channel', 'server', 'Server', 'ServicerContext', 'EOF', 'secure_channel', 'AbortError', 'BaseError', 'UsageError', 'InternalError', 'Metadata')
